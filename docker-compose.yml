services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.2
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: "2181"
    ports:
      - "2181:2181"
                  
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.1.2
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: "r1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      TOPIC_NAME: "poke-topic"
    command: >
      sh -c "
        /etc/confluent/docker/run &
        sleep 40 &&
        kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic poke-topic &&
        tail -f /dev/null
      "
  
  python-producer:
    image: python:3.12-slim  
    volumes:
      - ./poke_api_producer:/usr/src/app
    working_dir: /usr/src/app
    environment:
      KAFKA_BROKER: "kafka:29092"
      TOPIC_NAME: "poke-topic"
      OUTPUT_FILE_NAME: "type-count.json"
    command: bash -c "pip install -r requirements.txt && python main.py"
    depends_on:
      - kafka

  python-consumer:
    image: python:3.12-slim  
    volumes:
      - ./poke_api_consumer:/usr/src/app
    working_dir: /usr/src/app
    environment:
      KAFKA_BROKER: "kafka:29092"
      TOPIC_NAME: "poke-topic"
    command: bash -c "pip install -r requirements.txt && python main.py"
    depends_on:
      - kafka